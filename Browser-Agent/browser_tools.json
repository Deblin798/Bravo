[
  {
    "name": "browser_navigate",
    "description": "Navigate to a URL",
    "inputSchema": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to navigate to"
        }
      },
      "required": ["url"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Navigate to a URL",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_navigate_back",
    "description": "Go back to the previous page",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Go back",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_navigate_forward",
    "description": "Go forward to the next page",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Go forward",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_take_screenshot",
    "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["png", "jpeg"],
          "default": "png",
          "description": "Image format for the screenshot. Default is png."
        },
        "filename": {
          "type": "string",
          "description": "File name to save the screenshot to. Defaults to page-{timestamp}.{png|jpeg} if not specified."
        },
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too."
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too."
        },
        "fullPage": {
          "type": "boolean",
          "description": "When true, takes a screenshot of the full scrollable page, instead of the currently visible viewport. Cannot be used with element screenshots."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Take a screenshot",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_snapshot",
    "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Page snapshot",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_click",
    "description": "Perform click on a web page",
    "inputSchema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        },
        "doubleClick": {
          "type": "boolean",
          "description": "Whether to perform a double click instead of a single click"
        },
        "button": {
          "type": "string",
          "enum": ["left", "right", "middle"],
          "description": "Button to click, defaults to left"
        }
      },
      "required": ["element", "ref"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Click",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_drag",
    "description": "Perform drag and drop between two elements",
    "inputSchema": {
      "type": "object",
      "properties": {
        "startElement": {
          "type": "string",
          "description": "Human-readable source element description used to obtain the permission to interact with the element"
        },
        "startRef": {
          "type": "string",
          "description": "Exact source element reference from the page snapshot"
        },
        "endElement": {
          "type": "string",
          "description": "Human-readable target element description used to obtain the permission to interact with the element"
        },
        "endRef": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        }
      },
      "required": ["startElement", "startRef", "endElement", "endRef"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Drag mouse",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_hover",
    "description": "Hover over element on page",
    "inputSchema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        }
      },
      "required": ["element", "ref"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Hover mouse",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_tab_list",
    "description": "List browser tabs",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "List tabs",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_tab_new",
    "description": "Open a new tab",
    "inputSchema": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to navigate to in the new tab. If not provided, the new tab will be blank."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Open a new tab",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_wait_for",
    "description": "Wait for text to appear or disappear or a specified time to pass",
    "inputSchema": {
      "type": "object",
      "properties": {
        "time": {
          "type": "number",
          "description": "The time to wait in seconds"
        },
        "text": {
          "type": "string",
          "description": "The text to wait for"
        },
        "textGone": {
          "type": "string",
          "description": "The text to wait for to disappear"
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Wait for",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  }
]